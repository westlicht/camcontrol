################################################################################
#                                                                              #
#      IAR Universal Linker V4.60K/386                                         #
#                                                                              #
#           Link time     =  09/Apr/2009  14:03:23                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \dpp.map                                          #
#           Output file 1 =  C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \dpp.d43                                          #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#           Command line  =  C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \bsp.r43                                          #
#                            C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \main.r43                                         #
#                            C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \philo.r43                                        #
#                            C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \qepn.r43                                         #
#                            C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \qfn.r43                                          #
#                            C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \table.r43                                        #
#                            -o                                                #
#                            C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \dpp.d43                                          #
#                            -l                                                #
#                            C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg #
#                            \dpp.map                                          #
#                            -xmsnio -IC:\tools\IAR\430_KS_4.10A\430\LIB\ -f   #
#                            C:\tools\IAR\430_KS_4.10A\430\CONFIG\lnk430F2013. #
#                            xcl                                               #
#                            (-cmsp430                                         #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,DATA16_HEAP+_D #
#                            ATA16_HEAP_SIZE=0200-027F                         #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CODE)INFO=1000-10FF -Z(CODE)INFOA=10C0-10FF    #
#                            -Z(CODE)INFOB=1080-10BF -Z(CODE)INFOC=1040-107F   #
#                            -Z(CODE)INFOD=1000-103F                           #
#                            -Z(CONST)DATA16_C,DATA16_ID,DIFUNCT=F800-FFDF     #
#                            -Z(CONST)DATA20_C,DATA20_ID=F800-FFDF             #
#                            -Z(CODE)CSTART,ISR_CODE=F800-FFDF                 #
#                            -P(CODE)CODE=F800-FFDF -Z(CODE)INTVEC=FFE0-FFFF   #
#                            -Z(CODE)RESET=FFFE-FFFF) -D_STACK_SIZE=3C         #
#                            -Fubrof                                           #
#                            C:\tools\IAR\430_KS_4.10A\430\LIB\DLIB\dl430fn.r4 #
#                            3                                                 #
#                            -e_PrintfTiny=_Printf -e_ScanfSmall=_Scanf        #
#                            -D_DATA16_HEAP_SIZE=0 -s __program_start          #
#                            -D_DATA20_HEAP_SIZE=50                            #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           F866  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __core                 = 430
  __dlib_file_descriptor = 0
  __double_size          = 32
  __pic                  = no
  __reg_r4               = free
  __reg_r5               = free
  __rt_version           = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0000 
           _STACK_SIZE             003C 
    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg\bsp.r43
  PROGRAM MODULE, NAME : bsp

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0021 - 0021 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   BSP_displyPhilStat
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1OUT                   0021 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0022 - 0022 (0x1 bytes), align: 0
  Segment part 2.             Intra module refs:   BSP_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   0022 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0160 - 0161 (0x2 bytes), align: 0
  Segment part 3.             Intra module refs:   BSP_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACTL                   0160 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0162 - 0163 (0x2 bytes), align: 0
  Segment part 4.             Intra module refs:   QF_onStartup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCTL0                 0162 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0172 - 0173 (0x2 bytes), align: 0
  Segment part 5.             Intra module refs:   BSP_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCR0                  0172 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 6.             Intra module refs:   BSP_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC64 - FC7F (0x1c bytes), align: 1
  Segment part 14.            Intra module refs:   timerA_ISR::??INTVEC 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerA_ISR              FC64 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FCB4 - FCCB (0x18 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_init                FCB4            main (main)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDC4 - FDCB (0x8 bytes), align: 1
  Segment part 12.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_onStartup            FDC4            QF_run (qfn)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDCC - FDD1 (0x6 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_onIdle               FDCC            QF_run (qfn)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDD2 - FDD7 (0x6 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Q_onAssert              FDD2            ?Subroutine1 (qfn)
                                                   ?Subroutine1 (table)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FCCC - FCE3 (0x18 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_displyPhilStat      FCCC            Table_serving (table)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFF3 (0x14 bytes), align: 1
  Segment part 7. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerA_ISR::??INTVEC 18
                                   FFF2 
    -------------------------------------------------------------------------
CSTACK
  Segment part 8. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 15. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 16. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 022E - 0239 (0xc bytes), align: 0
  Segment part 2.             Intra module refs:   QF_active
           LOCAL                   ADDRESS         
           =====                   =======         
           l_philoQueue            022E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 023A - 023D (0x4 bytes), align: 0
  Segment part 3.             Intra module refs:   QF_active
           LOCAL                   ADDRESS         
           =====                   =======         
           l_tableQueue            023A 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F800 - F81D (0x1e bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_active               F800            ?Subroutine0 (qfn)
                                                   ?Subroutine2 (qfn)
                                                   ?Subroutine3 (qfn)
                                                   ?Subroutine5 (qfn)
                                                   QF_run (qfn)
                                                   Table_serving (table)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD54 - FD63 (0x10 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    FD54            Segment part 11 (?cstart)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 6. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 7. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg\philo.r43
  PROGRAM MODULE, NAME : philo

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 0200 - 0209 (0xa bytes), align: 1
  Segment part 2.             Intra module refs:   Philo_ctor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AO_Philo0               0200            QF_active (main)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 020A - 0213 (0xa bytes), align: 1
  Segment part 3.             Intra module refs:   Philo_ctor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AO_Philo1               020A            QF_active (main)
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0214 - 021D (0xa bytes), align: 1
  Segment part 4.             Intra module refs:   Philo_ctor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AO_Philo2               0214            QF_active (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FCFA - FD0D (0x14 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Philo_ctor              FCFA            main (main)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FAB0 - FADB (0x2c bytes), align: 1
  Segment part 5.             Intra module refs:   Philo_hungry
           LOCAL                   ADDRESS         
           =====                   =======         
           Philo_eating            FAB0 
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FADC - FAE7 (0xc bytes), align: 1
  Segment part 6.             Intra module refs:   Philo_eating
                                                   Philo_hungry
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            FADC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FAE8 - FB0B (0x24 bytes), align: 1
  Segment part 7.             Intra module refs:   Philo_thinking
           LOCAL                   ADDRESS         
           =====                   =======         
           Philo_hungry            FAE8 
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB0C - FB33 (0x28 bytes), align: 1
  Segment part 8.             Intra module refs:   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           Philo_thinking          FB0C 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB34, align: 1
  Segment part 9.             Intra module refs:   Philo_ctor
           LOCAL                   ADDRESS         
           =====                   =======         
           Philo_initial           FB34 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB34 - FB3D (0xa bytes), align: 1
  Segment part 10.            Intra module refs:   Philo_eating
                                                   Philo_initial
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            FB34 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 12. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 13. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg\qepn.r43
  PROGRAM MODULE, NAME : qepn

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QP_getVersion           
               not allocated function
    -------------------------------------------------------------------------
DATA16_C
  Segment part 2. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           QP_getVersion::version
                                   
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD0E - FD1F (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QFsm_init               FD0E            QF_run (qfn)
               calls indirect
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC40 - FC63 (0x24 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QFsm_dispatch           FC40            QF_run (qfn)
               calls indirect
               stack 1 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 6. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 7. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg\qfn.r43
  PROGRAM MODULE, NAME : qfn

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: F81E - F821 (0x4 bytes), align: 0
  Segment part 2.             Intra module refs:   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           l_this_file             F81E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 023E - 023E (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   ?Subroutine4
                                                   QF_run
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_readySet_            023E 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F822 - F82A (0x9 bytes), align: 0
  Segment part 4.             Intra module refs:   ?Subroutine4
           LOCAL                   ADDRESS         
           =====                   =======         
           l_pow2Lkup              F822 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDB4 - FDBB (0x8 bytes), align: 1
  Segment part 13.            Intra module refs:   QActive_post
                                                   QActive_postISR
                                                   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            FDB4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB3E - FB79 (0x3c bytes), align: 1
  Segment part 17.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QActive_post            FB3E            ?Subroutine0 (philo)
                                                   Table_serving (table)
               calls direct
               stack 1 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FCE4 - FCF9 (0x16 bytes), align: 1
  Segment part 18.            Intra module refs:   QActive_post
                                                   QActive_postISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine4            FCE4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD64 - FD73 (0x10 bytes), align: 1
  Segment part 19.            Intra module refs:   QActive_post
                                                   QActive_postISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            FD64 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FBE4 - FC13 (0x30 bytes), align: 1
  Segment part 20.            Intra module refs:   QActive_post
                                                   QActive_postISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            FBE4 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC9C - FCB3 (0x18 bytes), align: 1
  Segment part 21.            Intra module refs:   ?Subroutine0
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine5            FC9C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB7A - FBAF (0x36 bytes), align: 1
  Segment part 12.            Intra module refs:   QF_tick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QActive_postISR         FB7A 
               calls direct
               stack 1 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC14 - FC3F (0x2c bytes), align: 1
  Segment part 14.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_tick                 FC14            timerA_ISR (bsp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD98 - FDA1 (0xa bytes), align: 1
  Segment part 15.            Intra module refs:   QF_run
                                                   QF_tick
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            FD98 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD8E - FD97 (0xa bytes), align: 1
  Segment part 16.            Intra module refs:   ?Subroutine2
                                                   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine6            FD8E 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 023F - 023F (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   QF_tick
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_tick::p              023F 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 021E - 021F (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   QF_tick
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_tick{1}::a           021E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F9D8 - FAAF (0xd8 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_run                  F9D8            main (main)
               calls direct
               stack 1 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F82B - F83A (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_run::log2Lkup        F82B 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F83B - F843 (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_run::invPow2Lkup     F83B 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0220 - 0221 (0x2 bytes), align: 1
  Segment part 9.             Intra module refs:   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_run::a               0220 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0240 - 0240 (0x1 bytes), align: 0
  Segment part 10.            Intra module refs:   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_run::p               0240 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 22. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 23. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\dpp-eZ430\dbg\table.r43
  PROGRAM MODULE, NAME : table

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: F844 - F84C (0x9 bytes), align: 0
  Segment part 2.             Intra module refs:   Table_serving
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F84D - F855 (0x9 bytes), align: 0
  Segment part 3.             Intra module refs:   Table_serving
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F856 - F85E (0x9 bytes), align: 0
  Segment part 4.             Intra module refs:   Table_serving
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F85F - F864 (0x6 bytes), align: 0
  Segment part 5.             Intra module refs:   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           l_this_file             F85F 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0222 - 022D (0xc bytes), align: 1
  Segment part 6.             Intra module refs:   Table_ctor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AO_Table                0222            ?Subroutine0 (philo)
                                                   QF_active (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDAC - FDB3 (0x8 bytes), align: 1
  Segment part 13.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Table_ctor              FDAC            main (main)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDA2 - FDAB (0xa bytes), align: 1
  Segment part 12.            Intra module refs:   Table_ctor
           LOCAL                   ADDRESS         
           =====                   =======         
           Table_initial           FDA2 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F87E - F9D7 (0x15a bytes), align: 1
  Segment part 7.             Intra module refs:   Table_initial
           LOCAL                   ADDRESS         
           =====                   =======         
           Table_serving           F87E 
               calls direct
               stack 1 = 00000000 ( 00000012 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD74 - FD81 (0xe bytes), align: 1
  Segment part 8.             Intra module refs:   Table_serving
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            FD74 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDBC - FDC3 (0x8 bytes), align: 1
  Segment part 9.             Intra module refs:   Table_serving
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            FDBC 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD44 - FD4B (0x8 bytes), align: 1
  Segment part 10.            Intra module refs:   Table_serving
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            FD44 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FD4C - FD53 (0x8 bytes), align: 1
  Segment part 11.            Intra module refs:   ?Subroutine0
                                                   Table_serving
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            FD4C 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 14. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 15. TENTATIVE. Used definition from bsp
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\tools\IAR\430_KS_4.10A\430\LIB\DLIB\dl430fn.r43
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FDD8, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   FDD8            exit (?exit)
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_dtors     
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_closeall       
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FDD8 - FDDB (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cppinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __alloc_record_needed_destruction
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __record_needed_destruction
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_dtors            
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_vec_cctor      
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 5 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
HEAP
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Relative segment, address: 0244, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 022E, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Segment part 3. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F866 - F869 (0x4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         F866            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           F866 
    -------------------------------------------------------------------------
CSTART
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_low_level_init
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F86A - F875 (0xc bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       F86A            AO_Philo0 (philo)
                                                   AO_Philo1 (philo)
                                                   AO_Philo2 (philo)
                                                   AO_Table (table)
                                                   QF_readySet_ (qfn)
                                                   QF_run::a (qfn)
                                                   QF_run::p (qfn)
                                                   QF_tick::p (qfn)
                                                   QF_tick{1}::a (qfn)
                                                   l_philoQueue (main)
                                                   l_tableQueue (main)
    -------------------------------------------------------------------------
CSTART
  Segment part 8. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       
    -------------------------------------------------------------------------
DIFUNCT
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F876 - F87D (0x8 bytes), align: 1
  Segment part 11.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       F876 
           ?cstart_end             F87E 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : lowinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Epilogue

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FD32 - FD43 (0x12 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue3              FD3C 
           ?Epilogue4              FD3A            QActive_post (qfn)
                                                   QActive_postISR (qfn)
           ?Epilogue5              FD38 
           ?Epilogue6              FD36 
           ?Epilogue7              FD34 
           ?Epilogue8              FD32            Table_serving (table)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FDDC - FDDF (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    FDDC            Segment part 11 (?cstart)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?malloc

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816u

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FC80 - FC9B (0x1c bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8u               FC80 
           ?DivMod16u              FC84            Segment part 0 (?DivMod816s)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?DivMod816s

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FBB0 - FBE3 (0x34 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?DivMod8s               FBB0 
           ?DivMod16s              FBB4            ?Subroutine3 (table)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?ShiftLeft16

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FD82 - FD8D (0xc bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?ShiftLeft16            FD82            ?Subroutine2 (table)
                                                   Table_serving (table)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memmove

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memmove                 
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FD20 - FD31 (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        FD20            ?cstart_init_zero (?cstart)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memmove        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?setjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setjmp                  
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r5              
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r4              
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_end             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?longjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           longjmp                 
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r5             
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r4             
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_end            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SwitchKey8

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SwitchKey8             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xcloseall

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Close_all              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_GetMemChunk    
               not allocated function
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_HEAP
  Segment part 4. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FDE0 - FDE1 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  FDE0            Segment part 5 (?_exit)
                                                   _exit (?_exit)
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_free           
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_Aldata         
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           __data16_findmem        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_malloc         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA      CONST
------               ----      ----      -----
                    (Rel)  (Rel)  (Abs)  (Rel)
?DivMod816s            52
?DivMod816u            28
?Epilogue              18
?ShiftLeft16           12
?__exit                 2
?_exit                  4
?cstart                24
?exit                   4
?memzero               18
?reset_vector           2
bsp                    96            10
  + common             20
main                   16     16            30
philo                 162     30
qepn                   54
qfn                   512      7            38
table                 402     12            33
N/A (command line)            60
----------          -----    ---     --    ---
Total:              1 406    125     10    101
  + common             20


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000000
  04        Q_onAssert
            | Stack used (prev) :  00000000
            | + function block  :  00000002
  03      QActive_postISR
          | Stack used (prev) :  00000002
          | + function block  :  0000000A
  02    QF_tick
        | Stack used (prev) :  0000000C
        | + function block  :  00000002
  01  timerA_ISR
      | Stack used (prev) :  0000000E
      | + function block  :  0000000C
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000001A


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001A
  03      Q_onAssert
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  02    QActive_post
        | Stack used (prev) :  0000001A
        | + function block  :  0000000A
  01  Philo_eating
      | Stack used (prev) :  00000024
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000026


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001A
  02    QActive_post
        | Stack used (prev) :  0000001A
        | + function block  :  0000000A
        |  Already listed
  01  Philo_hungry
      | Stack used (prev) :  00000024
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000026


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001A
  01  Philo_thinking
      | Stack used (prev) :  0000001A
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001A
  01  Philo_initial
      | Stack used (prev) :  0000001A
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001A
  01  Table_initial
      | Stack used (prev) :  0000001A
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001A
  02    QActive_post
        | Stack used (prev) :  0000001A
        | + function block  :  0000000A
        |  Already listed
  02    BSP_displyPhilStat
        | Stack used (prev) :  0000001A
        | + function block  :  00000002
  02    Q_onAssert
        | Stack used (prev) :  00000000
        | + function block  :  00000002
        |  Already listed
  01  Table_serving
      | Stack used (prev) :  00000024
      | + function block  :  00000012
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000036


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000036
  02    Table_ctor
        | Stack used (prev) :  00000036
        | + function block  :  00000002
  03      QFsm_dispatch
          | Stack used (prev) :  00000036
          | + function block  :  00000006
  03      QFsm_init
          | Stack used (prev) :  00000036
          | + function block  :  00000004
  03      Q_onAssert
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      QF_onIdle
          | Stack used (prev) :  00000036
          | + function block  :  00000002
  03      QF_onStartup
          | Stack used (prev) :  00000036
          | + function block  :  00000002
  02    QF_run
        | Stack used (prev) :  0000003C
        | + function block  :  00000006
  02    Philo_ctor
        | Stack used (prev) :  00000036
        | + function block  :  00000002
  02    BSP_init
        | Stack used (prev) :  00000036
        | + function block  :  00000002
  01  main
      | Stack used (prev) :  00000042
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000044


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000044
  01  exit
      | Stack used (prev) :  00000044
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000046


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000046
  01  __data16_memzero
      | Stack used (prev) :  00000046
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000048




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0021 - 0022               2   rel    0
                                       0120 - 0121               2 
                                       0160 - 0163               4 
                                       0172 - 0173               2 
DATA16_I                                  0200                       dse    0
DATA16_Z                               0200 - 0240              41   rel    1
CSTACK                                 0244 - 027F              3C   rel    1
DATA16_C                               F800 - F864              65   rel    1
CSTART                                 F866 - F87D              18   rel    1
<CODE> 1                               F87E - FDE1             564   rel    1
INTVEC                                 FFE0 - FFF3              14   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 1 426 bytes of CODE  memory
   125 bytes of DATA  memory (+ 10 absolute )
   101 bytes of CONST memory

Errors: none
Warnings: none


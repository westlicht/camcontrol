################################################################################
#                                                                              #
#      IAR Universal Linker V4.60K/386                                         #
#                                                                              #
#           Link time     =  09/Apr/2009  14:03:20                             #
#           Target CPU    =  MSP430                                            #
#           List file     =  C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\bomb-qk.map                                  #
#           Output file 1 =  C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\bomb-qk.d43                                  #
#                            Format: debug                                     #
#                            UBROF version 10.0.2                              #
#           Command line  =  C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\bomb.r43                                     #
#                            C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\bsp.r43                                      #
#                            C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\main.r43                                     #
#                            C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\oper.r43                                     #
#                            C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\qepn.r43                                     #
#                            C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\qfn.r43                                      #
#                            C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\qkn.r43                                      #
#                            -o                                                #
#                            C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\bomb-qk.d43                                  #
#                            -l                                                #
#                            C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430 #
#                            \dbg\bomb-qk.map                                  #
#                            -xmsnio -IC:\tools\IAR\430_KS_4.10A\430\LIB\ -f   #
#                            C:\tools\IAR\430_KS_4.10A\430\CONFIG\lnk430F2013. #
#                            xcl                                               #
#                            (-cmsp430                                         #
#                            -Z(DATA)DATA16_I,DATA16_Z,DATA16_N,DATA16_HEAP+_D #
#                            ATA16_HEAP_SIZE=0200-027F                         #
#                            -Z(DATA)CSTACK+_STACK_SIZE#                       #
#                            -Z(CODE)INFO=1000-10FF -Z(CODE)INFOA=10C0-10FF    #
#                            -Z(CODE)INFOB=1080-10BF -Z(CODE)INFOC=1040-107F   #
#                            -Z(CODE)INFOD=1000-103F                           #
#                            -Z(CONST)DATA16_C,DATA16_ID,DIFUNCT=F800-FFDF     #
#                            -Z(CONST)DATA20_C,DATA20_ID=F800-FFDF             #
#                            -Z(CODE)CSTART,ISR_CODE=F800-FFDF                 #
#                            -P(CODE)CODE=F800-FFDF -Z(CODE)INTVEC=FFE0-FFFF   #
#                            -Z(CODE)RESET=FFFE-FFFF) -D_STACK_SIZE=50         #
#                            -Fubrof                                           #
#                            C:\tools\IAR\430_KS_4.10A\430\LIB\DLIB\dl430fn.r4 #
#                            3                                                 #
#                            -e_PrintfTiny=_Printf -e_ScanfSmall=_Scanf        #
#                            -D_DATA16_HEAP_SIZE=0 -s __program_start          #
#                            -D_DATA20_HEAP_SIZE=50                            #
#                                                                              #
#                        Copyright 1987-2007 IAR Systems. All rights reserved. #
################################################################################





                ****************************************
                *                                      *
                *           CROSS REFERENCE            *
                *                                      *
                ****************************************

       Program entry at :           F83E  Relocatable, from module : ?cstart




                ****************************************
                *                                      *
                *            RUNTIME MODEL             *
                *                                      *
                ****************************************

  __core                 = 430
  __dlib_file_descriptor = 0
  __double_size          = 32
  __pic                  = no
  __reg_r4               = free
  __reg_r5               = free
  __rt_version           = 3



                ****************************************
                *                                      *
                *              MODULE MAP              *
                *                                      *
                ****************************************


  DEFINED ABSOLUTE ENTRIES
    *************************************************************************

  DEFINED ABSOLUTE ENTRIES
  PROGRAM MODULE, NAME : ?ABS_ENTRY_MOD

Absolute parts
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _DATA20_HEAP_SIZE       0050 
           _DATA16_HEAP_SIZE       0000 
           _STACK_SIZE             0050 
    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430\dbg\bomb.r43
  PROGRAM MODULE, NAME : bomb

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0021 - 0021 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   Bomb_blast
                                                   Bomb_off
                                                   Bomb_timing
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1OUT                   0021 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0202 - 020D (0xc bytes), align: 1
  Segment part 3.             Intra module refs:   Bomb_ctor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AO_Bomb                 0202            Oper_run (oper)
                                                   QF_active (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC80 - FC87 (0x8 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Bomb_ctor               FC80            main (main)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F866 - F88B (0x26 bytes), align: 1
  Segment part 4.             Intra module refs:   Bomb_timing
           LOCAL                   ADDRESS         
           =====                   =======         
           Bomb_blast              F866 
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F88C - F8DF (0x54 bytes), align: 1
  Segment part 5.             Intra module refs:   Bomb_off
           LOCAL                   ADDRESS         
           =====                   =======         
           Bomb_timing             F88C 
               calls direct
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F8E0 - F90F (0x30 bytes), align: 1
  Segment part 6.             Intra module refs:   ?Subroutine0
           LOCAL                   ADDRESS         
           =====                   =======         
           Bomb_off                F8E0 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F910, align: 1
  Segment part 7.             Intra module refs:   Bomb_ctor
           LOCAL                   ADDRESS         
           =====                   =======         
           Bomb_initial            F910 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F910 - F919 (0xa bytes), align: 1
  Segment part 8.             Intra module refs:   Bomb_blast
                                                   Bomb_initial
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            F910 
    -------------------------------------------------------------------------
CSTACK
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 11. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430\dbg\bsp.r43
  PROGRAM MODULE, NAME : bsp

  SEGMENTS IN THE MODULE
  ======================
DATA16_AN
  Relative segment, address: 0022 - 0022 (0x1 bytes), align: 0
  Segment part 1.             Intra module refs:   BSP_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           P1DIR                   0022 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0160 - 0161 (0x2 bytes), align: 0
  Segment part 2.             Intra module refs:   BSP_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACTL                   0160 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0162 - 0163 (0x2 bytes), align: 0
  Segment part 3.             Intra module refs:   QF_onStartup
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCTL0                 0162 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0172 - 0173 (0x2 bytes), align: 0
  Segment part 4.             Intra module refs:   BSP_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           TACCR0                  0172 
    -------------------------------------------------------------------------
DATA16_AN
  Relative segment, address: 0120 - 0121 (0x2 bytes), align: 0
  Segment part 5.             Intra module refs:   BSP_init
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           WDTCTL                  0120 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB74 - FB93 (0x20 bytes), align: 1
  Segment part 12.            Intra module refs:   timerA_ISR::??INTVEC 18
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerA_ISR              FB74 
               interrupt function
               calls direct
               stack 1 = 00000000 ( 0000000C )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FBC8 - FBDF (0x18 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           BSP_init                FBC8            main (main)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC88 - FC8F (0x8 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_onStartup            FC88            QF_run (qkn)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC96 - FC9B (0x6 bytes), align: 1
  Segment part 9.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QK_onIdle               FC96            QF_run (qkn)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC90 - FC95 (0x6 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Q_onAssert              FC90            QActive_post (qfn)
                                                   QActive_postISR (qfn)
                                                   QF_run (qkn)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
INTVEC
  Common segment, address: FFE0 - FFF3 (0x14 bytes), align: 1
  Segment part 6. ROOT.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           timerA_ISR::??INTVEC 18
                                   FFF2 
    -------------------------------------------------------------------------
CSTACK
  Segment part 7. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 13. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 14. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430\dbg\main.r43
  PROGRAM MODULE, NAME : main

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 0220 - 0221 (0x2 bytes), align: 0
  Segment part 2.             Intra module refs:   QF_active
           LOCAL                   ADDRESS         
           =====                   =======         
           l_bombQueue             0220 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F800 - F811 (0x12 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_active               F800            ?Subroutine0 (qfn)
                                                   ?Subroutine2 (qfn)
                                                   ?Subroutine3 (qfn)
                                                   QF_run (qkn)
                                                   QF_tick (qfn)
                                                   QK_schedule_ (qkn)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB94 - FBAF (0x1c bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           main                    FB94            Segment part 11 (?cstart)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 6. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430\dbg\oper.r43
  PROGRAM MODULE, NAME : oper

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Relative segment, address: 020E - 021B (0xe bytes), align: 1
  Segment part 2.             Intra module refs:   Oper_ctor
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           AO_Oper                 020E            QF_active (main)
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FBB0 - FBC7 (0x18 bytes), align: 1
  Segment part 6.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           Oper_ctor               FBB0            main (main)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FA1C - FA63 (0x48 bytes), align: 1
  Segment part 3.             Intra module refs:   ?Subroutine0
           LOCAL                   ADDRESS         
           =====                   =======         
           Oper_run                FA1C 
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FA64, align: 1
  Segment part 4.             Intra module refs:   Oper_ctor
           LOCAL                   ADDRESS         
           =====                   =======         
           Oper_initial            FA64 
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FA64 - FA6D (0xa bytes), align: 1
  Segment part 5.             Intra module refs:   Oper_initial
                                                   Oper_run
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            FA64 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 7. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 8. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430\dbg\qepn.r43
  PROGRAM MODULE, NAME : qepn

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QP_getVersion           
               not allocated function
    -------------------------------------------------------------------------
DATA16_C
  Segment part 2. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           QP_getVersion::version
                                   
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC0E - FC1F (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QFsm_init               FC0E            QF_run (qkn)
               calls indirect
               stack 1 = 00000000 ( 00000004 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB50 - FB73 (0x24 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QFsm_dispatch           FB50            QK_schedule_ (qkn)
               calls indirect
               stack 1 = 00000000 ( 00000006 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 6. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 7. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430\dbg\qfn.r43
  PROGRAM MODULE, NAME : qfn

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: F812 - F815 (0x4 bytes), align: 0
  Segment part 2.             Intra module refs:   QActive_post
                                                   QActive_postISR
           LOCAL                   ADDRESS         
           =====                   =======         
           l_this_file             F812 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0222 - 0222 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   ?Subroutine1
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_readySet_            0222            QF_run (qkn)
                                                   QK_schedule_ (qkn)
                                                   timerA_ISR (bsp)
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F816 - F81E (0x9 bytes), align: 0
  Segment part 4.             Intra module refs:   ?Subroutine1
           LOCAL                   ADDRESS         
           =====                   =======         
           l_pow2Lkup              F816 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FA6E - FAB1 (0x44 bytes), align: 1
  Segment part 11.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QActive_post            FA6E            Oper_run (oper)
               calls direct
               stack 1 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC56 - FC65 (0x10 bytes), align: 1
  Segment part 12.            Intra module refs:   QActive_post
                                                   QActive_postISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine2            FC56 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FBF8 - FC0D (0x16 bytes), align: 1
  Segment part 13.            Intra module refs:   QActive_post
                                                   QActive_postISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine1            FBF8 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FB20 - FB4F (0x30 bytes), align: 1
  Segment part 14.            Intra module refs:   QActive_post
                                                   QActive_postISR
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            FB20 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FBE0 - FBF7 (0x18 bytes), align: 1
  Segment part 15.            Intra module refs:   ?Subroutine0
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine3            FBE0 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FAB2 - FAEB (0x3a bytes), align: 1
  Segment part 9.             Intra module refs:   QF_tick
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QActive_postISR         FAB2 
               calls direct
               stack 1 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FAEC - FB1F (0x34 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_tick                 FAEC            timerA_ISR (bsp)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0223 - 0223 (0x1 bytes), align: 0
  Segment part 5.             Intra module refs:   QF_tick
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_tick::p              0223 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 021C - 021D (0x2 bytes), align: 1
  Segment part 6.             Intra module refs:   QF_tick
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_tick{1}::a           021C 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC74 - FC7F (0xc bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QActive_arm             FC74            Bomb_blast (bomb)
                                                   Bomb_timing (bomb)
                                                   Oper_run (oper)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QActive_disarm          
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 16. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 17. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\software\qpn\examples\msp430\iar\bomb-qk-eZ430\dbg\qkn.r43
  PROGRAM MODULE, NAME : qkn

  SEGMENTS IN THE MODULE
  ======================
DATA16_C
  Relative segment, address: F81F - F822 (0x4 bytes), align: 0
  Segment part 2.             Intra module refs:   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           l_this_file             F81F 
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 0200 - 0200 (0x1 bytes), align: 0
  Segment part 3.             Intra module refs:   QF_run
                                                   QK_schedule_
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QK_currPrio_            0200 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 021E - 021F (0x2 bytes), align: 1
  Segment part 5.             Intra module refs:   QF_run
                                                   QK_schedule_
           LOCAL                   ADDRESS         
           =====                   =======         
           l_act                   021E 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F9A8 - FA1B (0x74 bytes), align: 1
  Segment part 10.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QF_run                  F9A8            main (main)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FC66 - FC73 (0xe bytes), align: 1
  Segment part 11.            Intra module refs:   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           ?Subroutine0            FC66 
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0224 - 0224 (0x1 bytes), align: 0
  Segment part 6.             Intra module refs:   ?Subroutine0
                                                   QF_run
           LOCAL                   ADDRESS         
           =====                   =======         
           QF_run::p               0224 
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: F91A - F9A7 (0x8e bytes), align: 1
  Segment part 9.             Intra module refs:   QF_run
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           QK_schedule_            F91A            QActive_post (qfn)
                                                   timerA_ISR (bsp)
               calls direct
               stack 1 = 00000000 ( 0000000A )
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F823 - F832 (0x10 bytes), align: 0
  Segment part 7.             Intra module refs:   QK_schedule_
           LOCAL                   ADDRESS         
           =====                   =======         
           QK_schedule_::log2Lkup
                                   F823 
    -------------------------------------------------------------------------
DATA16_C
  Relative segment, address: F833 - F83B (0x9 bytes), align: 0
  Segment part 8.             Intra module refs:   QK_schedule_
           LOCAL                   ADDRESS         
           =====                   =======         
           QK_schedule_::invPow2Lkup
                                   F833 
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: F83C - F83C (0x1 bytes), align: 0
  Segment part 4.             Intra module refs:   QK_currPrio_
    -------------------------------------------------------------------------
CODE
  Segment part 12. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r4         
    -------------------------------------------------------------------------
CODE
  Segment part 13. TENTATIVE. Used definition from bomb
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_save_r5         

    *************************************************************************

  FILE NAME : C:\tools\IAR\430_KS_4.10A\430\LIB\DLIB\dl430fn.r43
  LIBRARY MODULE, NAME : ?abort

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           abort                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?_exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FCA4, align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _exit                   FCA4            exit (?exit)
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_call_dtors     
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __cstart_closeall       
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FCA4 - FCA7 (0x4 bytes), align: 1
  Segment part 5.             Intra module refs:   _exit

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cppinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 7. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_ctors            
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __alloc_record_needed_destruction
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CODE
  Segment part 5. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __record_needed_destruction
                                   
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __call_dtors            
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_vec_cctor      
               calls indirect
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?reset_vector

  SEGMENTS IN THE MODULE
  ======================
RESET
  Relative segment, address: FFFE - FFFF (0x2 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?reset_vector           FFFE            Segment part 5 (?cstart)

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?cstart

  SEGMENTS IN THE MODULE
  ======================
HEAP
  Segment part 0. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Relative segment, address: 0230, align: 1
  Segment part 1.
    -------------------------------------------------------------------------
DATA16_Z
  Relative segment, address: 0220, align: 1
  Segment part 2.
    -------------------------------------------------------------------------
DATA16_I
  Relative segment, address: 0200, align: 1
  Segment part 3.
    -------------------------------------------------------------------------
DATA16_ID
  Relative segment, address: F83C, align: 1
  Segment part 4.
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F83E - F841 (0x4 bytes), align: 1
  Segment part 5.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __program_start         F83E            ?reset_vector (?reset_vector)
                                                   Absolute parts (?ABS_ENTRY_MOD)
           ?cstart_begin           F83E 
    -------------------------------------------------------------------------
CSTART
  Segment part 6. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_low_level_init
                                   
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F842 - F84D (0xc bytes), align: 1
  Segment part 7.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_zero       F842            AO_Bomb (bomb)
                                                   AO_Oper (oper)
                                                   QF_readySet_ (qfn)
                                                   QF_run::p (qkn)
                                                   QF_tick::p (qfn)
                                                   QF_tick{1}::a (qfn)
                                                   l_act (qkn)
                                                   l_bombQueue (main)
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F84E - F85D (0x10 bytes), align: 1
  Segment part 8.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_init_copy       F84E            QK_currPrio_ (qkn)
    -------------------------------------------------------------------------
DIFUNCT
  Segment part 9. NOT NEEDED.
    -------------------------------------------------------------------------
CSTART
  Segment part 10. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_ctors      
    -------------------------------------------------------------------------
CSTART
  Relative segment, address: F85E - F865 (0x8 bytes), align: 1
  Segment part 11.            Intra module refs:   Segment part 5
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?cstart_call_main       F85E 
           ?cstart_end             F866 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : lowinit

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __low_level_init        

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?Epilogue

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FC44 - FC55 (0x12 bytes), align: 1
  Segment part 0.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?Epilogue3              FC4E 
           ?Epilogue4              FC4C            QActive_post (qfn)
                                                   QActive_postISR (qfn)
                                                   QK_schedule_ (qkn)
           ?Epilogue5              FC4A 
           ?Epilogue6              FC48 
           ?Epilogue7              FC46 
           ?Epilogue8              FC44 

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FC9C - FC9F (0x4 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           exit                    FC9C            Segment part 11 (?cstart)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?malloc

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           malloc                  
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memcpy

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FC20 - FC31 (0x12 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memcpy                  FC20            __data16_memcpy (?memzero)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memmove

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           memmove                 
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?memzero

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FC32 - FC43 (0x12 bytes), align: 1
  Segment part 4.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memzero        FC32            ?cstart_init_zero (?cstart)
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
<CODE> 1 (was CODE)
  Relative segment, address: FCA0 - FCA3 (0x4 bytes), align: 1
  Segment part 3.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memcpy         FCA0            ?cstart_init_copy (?cstart)
               calls direct
               stack 1 = 00000000 ( 00000002 )
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_memmove        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?setjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           setjmp                  
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r5              
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_r4              
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?setjmp_end             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?longjmp

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           longjmp                 
    -------------------------------------------------------------------------
CODE
  Segment part 1. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r5             
    -------------------------------------------------------------------------
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_r4             
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?longjmp_end            

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?SwitchKey8

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 0. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           ?SwitchKey8             

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xcloseall

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           _Close_all              
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xgetmemchunk

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 3. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_GetMemChunk    
               not allocated function
    -------------------------------------------------------------------------
DATA16_Z
  Segment part 2. NOT NEEDED.
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.
    -------------------------------------------------------------------------
DATA16_HEAP
  Segment part 4. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?__exit

  SEGMENTS IN THE MODULE
  ======================
<CODE> 1 (was CODE)
  Relative segment, address: FCA8 - FCA9 (0x2 bytes), align: 1
  Segment part 2.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __exit                  FCA8            Segment part 5 (?_exit)
                                                   _exit (?_exit)
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxfree

  SEGMENTS IN THE MODULE
  ======================
CODE
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_free           
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.

    -------------------------------------------------------------------------
  LIBRARY MODULE, NAME : ?xxmemxmalloc

  SEGMENTS IN THE MODULE
  ======================
DATA16_Z
  Segment part 2. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_Aldata         
    -------------------------------------------------------------------------
CODE
  Segment part 3. NOT NEEDED.
           LOCAL                   ADDRESS         
           =====                   =======         
           __data16_findmem        
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CODE
  Segment part 4. NOT NEEDED.
           ENTRY                   ADDRESS         REF BY
           =====                   =======         ======
           __data16_malloc         
               calls direct
               not allocated function
    -------------------------------------------------------------------------
CSTACK
  Segment part 1. NOT NEEDED.




                ****************************************
                *                                      *
                *            MODULE SUMMARY            *
                *                                      *
                ****************************************

Module               CODE      DATA      CONST
------               ----      ----      -----
                    (Rel)  (Rel)  (Abs)  (Rel)
?Epilogue              18
?__exit                 2
?_exit                  4
?cstart                40
?exit                   4
?memcpy                18
?memzero               22
?reset_vector           2
bomb                  188     12      1
bsp                    76             9
  + common             20
main                   28      2            18
oper                  106     14
qepn                   54
qfn                   300      4            13
qkn                   272      4            30
N/A (command line)            80
----------          -----    ---     --     --
Total:              1 134    116     10     61
  + common             20


                ****************************************
                *                                      *
                *              CALL GRAPH              *
                *                                      *
                ****************************************

  ->Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
                             CSTACK
    | Stack used (prev) :  00000000
  03      QFsm_dispatch
          | Stack used (prev) :  00000000
          | + function block  :  00000006
  02    QK_schedule_
        | Stack used (prev) :  00000006
        | + function block  :  0000000A
  04        Q_onAssert
            | Stack used (prev) :  00000000
            | + function block  :  00000002
  03      QActive_postISR
          | Stack used (prev) :  00000002
          | + function block  :  0000000A
  02    QF_tick
        | Stack used (prev) :  0000000C
        | + function block  :  00000002
  01  timerA_ISR
      | Stack used (prev) :  00000010
      | + function block  :  0000000C
  <-Sub-tree of type: Interrupt function tree that does not make
                    : indirect calls
    | Stack used          :  0000001C


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001C
  02    QActive_arm
        | Stack used (prev) :  0000001C
        | + function block  :  00000002
  01  Bomb_blast
      | Stack used (prev) :  0000001E
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000020


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001C
  02    QActive_arm
        | Stack used (prev) :  0000001C
        | + function block  :  00000002
        |  Already listed
  01  Bomb_timing
      | Stack used (prev) :  0000001E
      | + function block  :  00000004
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000022


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001C
  01  Bomb_off
      | Stack used (prev) :  0000001C
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001C
  01  Bomb_initial
      | Stack used (prev) :  0000001C
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001E


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001C
  02    QActive_arm
        | Stack used (prev) :  0000001C
        | + function block  :  00000002
        |  Already listed
  03      QK_schedule_
          | Stack used (prev) :  00000006
          | + function block  :  0000000A
          |  Already listed
  03      Q_onAssert
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  02    QActive_post
        | Stack used (prev) :  0000001C
        | + function block  :  0000000A
  01  Oper_run
      | Stack used (prev) :  00000026
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  00000028


  ->Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
                             CSTACK
    | Stack used (prev) :  0000001C
  01  Oper_initial
      | Stack used (prev) :  0000001C
      | + function block  :  00000002
  <-Sub-tree of type: Indirectly called function tree that does not make
                    : indirect calls (Is not an interrupt and is not flagged
                    : as not overlayable)
    | Stack used          :  0000001E


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000028
  03      QK_schedule_
          | Stack used (prev) :  00000006
          | + function block  :  0000000A
          |  Already listed
  03      QFsm_init
          | Stack used (prev) :  00000028
          | + function block  :  00000004
  03      Q_onAssert
          | Stack used (prev) :  00000000
          | + function block  :  00000002
          |  Already listed
  03      QK_onIdle
          | Stack used (prev) :  00000028
          | + function block  :  00000002
  03      QF_onStartup
          | Stack used (prev) :  00000028
          | + function block  :  00000002
  02    QF_run
        | Stack used (prev) :  0000002C
        | + function block  :  00000002
  02    Oper_ctor
        | Stack used (prev) :  00000028
        | + function block  :  00000002
  02    BSP_init
        | Stack used (prev) :  00000028
        | + function block  :  00000002
  02    Bomb_ctor
        | Stack used (prev) :  00000028
        | + function block  :  00000002
  01  main
      | Stack used (prev) :  0000002E
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000030


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000030
  01  exit
      | Stack used (prev) :  00000030
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000032


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000032
  01  __data16_memzero
      | Stack used (prev) :  00000032
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000034


  ->Sub-tree of type: Function tree
                             CSTACK
    | Stack used (prev) :  00000034
  02    memcpy
        | Stack used (prev) :  00000034
        | + function block  :  00000002
  01  __data16_memcpy
      | Stack used (prev) :  00000036
      | + function block  :  00000002
  <-Sub-tree of type: Function tree
    | Stack used          :  00000038




                ****************************************
                *                                      *
                *      SEGMENTS IN ADDRESS ORDER       *
                *                                      *
                ****************************************


SEGMENT              SPACE    START ADDRESS   END ADDRESS     SIZE  TYPE  ALIGN
=======              =====    =============   ===========     ====  ====  =====
DATA16_AN                              0021 - 0022               2   rel    0
                                       0120 - 0121               2 
                                       0160 - 0163               4 
                                       0172 - 0173               2 
DATA16_I                               0200 - 0200               1   rel    1
DATA16_Z                               0202 - 0224              23   rel    1
CSTACK                                 0230 - 027F              50   rel    1
DATA16_C                               F800 - F83B              3C   rel    1
DATA16_ID                              F83C - F83C               1   rel    1
CSTART                                 F83E - F865              28   rel    1
<CODE> 1                               F866 - FCA9             444   rel    1
INTVEC                                 FFE0 - FFF3              14   com    1
RESET                                  FFFE - FFFF               2   rel    1

                ****************************************
                *                                      *
                *        END OF CROSS REFERENCE        *
                *                                      *
                ****************************************

 1 154 bytes of CODE  memory
   116 bytes of DATA  memory (+ 10 absolute )
    61 bytes of CONST memory

Errors: none
Warnings: none

